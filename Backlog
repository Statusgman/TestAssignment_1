Завершающим этапом будет тестовое задание, новости с Core Date

Создать приложение, которое будет загружать из API https://api.tinkoff.ru/v1/news заголовки новостей и показывать их в виде списка.
В каждом элементе списка i должен отображаться текст из поля payload[i].text. Список должен быть отсортирован по полю publicationDate по убыванию. Полученные данные должны кешироваться на клиенте. Данные должны обновляться после оттягивания (pull-to-refresh).
При нажатии на каждую новость, она должна открывать новый экран и показывать содержимое (payload.content) загруженное из API https://api.tinkoff.ru/v1/news_content?id={ payload[i].id}. Уделять много внимания дизайну не стоит, но чистый аккуратный интерфейс обязателен. При реализации можно пользоваться любыми привычными инструментами/библиотеками.

1) Подразумевается использование фреймворка Core Data для кэширования.
2) Описание уже загруженных новостей не изменяется при изменении их в выдаче. То есть при обновлении по pull-to-refresh единственное, что нужно сделать это отобразить и закешировать новые записи.
3) В полях text объектов списка присутствуют спец символы html (&laquo;text&raquo). Требований по их обработке нет.
4) Текст новости в детальной информации  это HTML - требований по способу отображения нет.


Tasks:
- Core data stack
- Network layer
- Payload sorting
- Master-detail UI
- Pull-to-refresh
- JSON содержит текст различной длины, в связи с этим следует использовать ячейки переменной высоты
